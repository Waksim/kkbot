import logging
from typing import List

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
from django.conf import settings

from apps.cards.services.db_updater import run_card_update
from apps.users.models import TelegramUser, UserActivity
from apps.users.services import log_user_activity

logger = logging.getLogger(__name__)
admin_router = Router(name="admin-commands-router")

# –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –∫–æ –≤—Å–µ–º —Ö–µ–Ω–¥–ª–µ—Ä–∞–º –≤ —ç—Ç–æ–º —Ä–æ—É—Ç–µ—Ä–µ
if settings.ADMIN_ID:
    admin_router.message.filter(F.from_user.id == settings.ADMIN_ID)
else:
    logger.warning("ADMIN_ID –Ω–µ —É–∫–∞–∑–∞–Ω –≤ .env, –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.")
    admin_router.message.filter(lambda message: False)  # –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã


async def send_long_message(message: Message, text: str, max_length: int = 4096):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ä–∞–∑–±–∏–≤–∞—è –µ–≥–æ –Ω–∞ —á–∞—Å—Ç–∏."""
    for i in range(0, len(text), max_length):
        await message.answer(text[i:i + max_length])


@admin_router.message(Command("update_cards"))
async def update_cards_command(message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /update_cards, –∑–∞–ø—É—Å–∫–∞—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –∫–∞—Ä—Ç.
    """
    user = await TelegramUser.objects.aget(user_id=message.from_user.id)
    await log_user_activity(user, UserActivity.ActivityType.COMMAND_USED, {'command': '/update_cards'})

    await message.answer("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—è—Ç–∞. –ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç...\n"
                         "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç. –Ø –ø—Ä–∏—à–ª—é –æ—Ç—á–µ—Ç –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏.")
    try:
        logs: List[str] = await run_card_update()
        report = "\n".join(logs)
        await send_long_message(message, "üìù **–û—Ç—á–µ—Ç –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:**\n\n" + report)
        await message.answer("üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    except Exception as e:
        logger.exception("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ update_cards_command")
        await message.answer(f"‚ùå **–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:**\n\n`{e}`")


@admin_router.message(Command("help_admin"))
async def admin_help_command(message: Message):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã.
    """
    user = await TelegramUser.objects.aget(user_id=message.from_user.id)
    await log_user_activity(user, UserActivity.ActivityType.COMMAND_USED, {'command': '/help_admin'})

    await message.answer(
        "**–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:**\n"
        "/update_cards - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç –∏–∑ API.\n"
        "/help_admin - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ."
    )